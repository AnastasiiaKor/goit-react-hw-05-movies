{"version":3,"file":"static/js/961.8befa702.chunk.js","mappings":"iOAkFA,UA9EA,WACE,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAejB,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAaV,GAFpC,OAEUW,EAFV,OAGIP,EAASO,GACTL,GAAY,GAJhB,gDAMIM,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACd,IAEAK,EACF,OACE,6BACE,SAAC,KAAD,CAAMU,GAAE,UAAKR,EAASS,MAAMC,MAA5B,6BACA,0BACE,gBACEC,IAAK,kCAAoCf,EAAMgB,YAC/CC,IAAKjB,EAAMkB,WAIf,4BACE,0BACGlB,EAAMkB,MADT,KAEGlB,EAAMmB,cAAgBnB,EAAMmB,aAAaC,MAAM,EAAG,GAFrD,QAIA,yCAAsC,GAArBpB,EAAMqB,cAAmBC,UAA1C,QACA,qCACA,uBAAItB,EAAMuB,YACV,0BACE,qCACCvB,EAAMwB,OAAOC,OAAS,EACnBzB,EAAMwB,OACHJ,MAAM,EAAG,GACTM,KAAI,SAAAC,GAAK,OAAI,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAM9B,GAArB,IACZG,EAAMwB,OAAOE,KAAI,SAAAC,GAAK,OACpB,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAM9B,GADG,QAI5B,2BACE,yBACE,SAAC,KAAD,CACEe,GAAG,OACHC,MAAO,CACLC,KAAK,GAAD,OAAKV,EAASS,MAAMC,OAH5B,qBASF,yBACE,SAAC,KAAD,CACEF,GAAG,UACHC,MAAO,CACLC,KAAK,GAAD,OAAKV,EAASS,MAAMC,OAH5B,2BAUJ,SAAC,EAAAe,SAAD,CAAUC,UAAU,yCAApB,UACE,SAAC,KAAD,WAMX,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieById } from 'services/api';\n\nfunction MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        const film = await getMovieById(id);\n        setMovie(film);\n        setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDetails();\n  }, [id]);\n\n  if (isLoaded) {\n    return (\n      <main>\n        <Link to={`${location.state.from}`}>&larr; Go back</Link>\n        <div>\n          <img\n            src={'https://image.tmdb.org/t/p/w500' + movie.poster_path}\n            alt={movie.title}\n          />\n        </div>\n\n        <div>\n          <h1>\n            {movie.title} (\n            {movie.release_date && movie.release_date.slice(0, 4)})\n          </h1>\n          <p>User score: {(movie.vote_average * 10).toFixed()}%</p>\n          <b>Overview</b>\n          <p>{movie.overview}</p>\n          <p>\n            <b> Genres: </b>\n            {movie.genres.length > 3\n              ? movie.genres\n                  .slice(0, 3)\n                  .map(genre => <span key={genre.id}>{genre.name} </span>)\n              : movie.genres.map(genre => (\n                  <span key={genre.id}>{genre.name} </span>\n                ))}\n          </p>\n          <ul>\n            <li>\n              <Link\n                to=\"cast\"\n                state={{\n                  from: `${location.state.from}`,\n                }}\n              >\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"reviews\"\n                state={{\n                  from: `${location.state.from}`,\n                }}\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading ...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </main>\n    );\n  }\n}\nexport default MovieDetails;\n"],"names":["id","useParams","useState","movie","setMovie","isLoaded","setIsLoaded","location","useLocation","useEffect","getMovieById","film","console","log","getDetails","to","state","from","src","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","length","map","genre","name","Suspense","fallback"],"sourceRoot":""}